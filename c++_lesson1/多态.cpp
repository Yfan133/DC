/*
抽向类：
将包含纯虚函数的类 称之为

虚表中的虚拟地址是无法修改的
子类的虚表先继承父类的虚表，再将对应重写的函数改成自己的函数入口地址
*/


/*
多态在强转时不会生成新的一份拷贝！！
但其他的按理说会生成一份拷贝

*/



/*
面试题：
1.什么是多态？
	1.概念：举例一些现实的例子，买票的例子
	2.分类：
		1.静态多态(静态绑定 || 早绑定)：程序在编译期间确定函数的具体行为(具体调用哪一个函数)
			体现：函数重载和模板
			int/double Add(int/double left, int/double right)
			{
				return left + right
			}
			程序在编译时，编译器会对函数的实参类型进行推演，然后根据推演结果选择合适的函数进行调用
			如果没有合适的函数，则编译器会尝试进行隐式类型转化，如果转化成功则调用，否则报错(例如：char -》int可以互相转化，但char* 和 int/char 无法转化)
		2.动态多态(动态绑定，动态联编，晚绑定)：程序在运行期间才能确定函数的具体行为
	3.多态的实现条件---继承体系
	4.伪代码的形式举例子
	5.重写 + override + final
	6.多态的实现原理
		1.基类中含虚函数
		2.基类和派生类的虚表构建过程
		3.虚函数调用原理
			从对象前4字节取出虚表地址
			传参 = this + 函数的实参
			从虚表中找到相应的虚函数
			对该虚函数进行调用
	7.结果对象模型 + 虚表 + 虚函数调用过程
2.什么是重载？重写(覆盖)？重定义(同名隐藏)？
3.类中哪些函数不能作为虚函数？
	1.构造函数：构造函数要初始化对象模型前4字节(虚表)
	2.静态成员函数：
	3.内联函数：如果编译器将函数作为内联进行处理，则内联在编译阶段会在函数调用位置用函数体进行替换
	注意：
		友元函数不是类的成员函数，因此不能作为虚函数。
		赋值运算符重载：可以作为虚函数，但一般情况下不建议设置为虚函数
	虚函数如果要调用，必须从虚表中找到该虚函数地址，找到虚表，而虚表存储在对象前4字节中，则必须有一个对象，而构造函数是给虚表的前4字节赋值
	派生类涉及资源管理时，基类析构必须设置成虚函数
4.多态的缺陷？降低了程序运行效率
	汇编中对于虚函数要增加 mov 指令

课后调研：C语言模拟实现：封装、继承、多态
	1.虚表 -》 函数指针数组
	2.多态的构造函数要初始化虚表地址(对象前4字节)
	  C中用一个初始化函数，将函数指针数组的首地址放到结构体变量的前4字节
	3.对象.成员函数() --》在结构体中增加一些函数指针类型变量
	4.虚函数的调用过程：参考打印虚表
*/





/*
抽象类：
	包含纯虚函数的类称为抽象类
	抽象类不能实例化对象，因为不具体(空间没办法开辟)，但可以创建出指针(指针空间大小一定)
	纯虚函数 ―》 虚函数 后面 + == 0
	virtual void fun() = 0;		//只能在虚函数后面加 == 0
	抽象类一定要被继承，并且在派生类中重写纯虚函数，才能实例化出对象











*/































